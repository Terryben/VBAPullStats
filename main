Option Explicit
Option Compare Text

Sub OptionsMacro()

On Error GoTo ErrorHandler
'Create and initialize a new instead of the Internet Explorer controller class
Dim IEController As cIE_Controller


'set up the base values for the IE controller object. VBA doenst have real constructors which is why this is a separate method from NEW
Set IEController = New cIE_Controller
IEController.cIE_Controller_Constructor

'Debug.Print "This si the text: " & Worksheets(1).Cells(11, 2).value

getBasicData IEController, Worksheets(1).Cells(11, 2).Text
getOptionsData IEController, Worksheets(1).Cells(11, 2).Text
'Application.Wait (Now + TimeValue("0:00:10"))
IEController.ie.Quit

Exit Sub
ErrorHandler:
    MsgBox "Encountered unknown error. Show Ben what happened."
    Exit Sub
End Sub

'subroutine to get the options data
Sub getOptionsData(IEController As cIE_Controller, tckr As String)
Dim webText As String
Dim tempString As String
Dim findVals(16) As String
Dim theVals() As String
Dim fVal As Variant

Dim i As Integer, j As Integer, k As Integer, startPos As Integer
Dim tempText As String

'Move to the web page we want
tempString = "https://finance.yahoo.com/quote/" & tckr & "/options?p=" & tckr
IEController.NavigateTo (tempString)
setOptionsArray findVals
webText = IEController.html.all(73).innerText
'Worksheets(1).Cells(1, 10).value = webText
startPos = InStr(webText, "Callsfor")
'cut out most of the junk before it
tempText = Mid(webText, startPos, 9000)
'split the values we want by the new line charachter
theVals = Split(tempText, vbCrLf)

Worksheets(1).Cells(10, 12).value = "Calls"
Worksheets(1).Cells(10, 26).value = "Puts"
For k = 0 To 11
    Worksheets(1).Cells(11, 18 + k).value = findVals(k)
    Worksheets(1).Cells(11, 6 + k).value = findVals(k)
Next k

k = 12
j = 0
For Each fVal In theVals
    'Debug.Print Mid(fVal, 1, Len(tckr))
    'Debug.Print tckr
    If Mid(fVal, 1, 7) = "putsfor" Then
            k = 12
            j = 12
    End If
    tempText = tckr & "1"
    'Debug.Print tempText
    If Mid(fVal, 1, Len(tckr) + 1) = (tckr & "1") Then 'Options compare text at the top makes this ignore case sensitivity
        'Debug.Print "In if statement"
        'Debug.Print fVal
        'contract name
        Worksheets(1).Cells(k, 6 + j).value = Mid(fVal, 1, Len(tckr) + 15)
        'last trade date
        startPos = InStr(fVal, "EDT")
        Debug.Print fVal
        Worksheets(1).Cells(k, 7 + j).value = Mid(fVal, Len(tckr) + 16, startPos + 3 - Len(tckr) - 16)
        'strike
        tempText = Mid(fVal, startPos + 3) 'remove everything up to the strike price from the string because it's easier for me to think about this way
        startPos = InStr(tempText, ".")
        'tempText = Mid(fVal, Len(tckr) + 38, startPos - Len(tckr) + 40)
        Worksheets(1).Cells(k, 8 + j).value = Mid(tempText, 1, startPos + 2)
        'last price
        'Debug.Print tempText
        tempText = Mid(tempText, startPos + 3)
        'Debug.Print tempText
        startPos = InStr(tempText, ".")
        Worksheets(1).Cells(k, 9 + j).value = Mid(tempText, 1, startPos + 2)
        'bid
        tempText = Mid(tempText, startPos + 3)
        startPos = InStr(tempText, ".")
        Worksheets(1).Cells(k, 10 + j).value = Mid(tempText, 1, startPos + 2)
        'ask
        tempText = Mid(tempText, startPos + 3)
        startPos = InStr(tempText, ".")
        Worksheets(1).Cells(k, 11 + j).value = Mid(tempText, 1, startPos + 2)
        'change
        tempText = Mid(tempText, startPos + 3)
        startPos = InStr(tempText, ".")
        Worksheets(1).Cells(k, 12 + j).value = Mid(tempText, 1, startPos + 2)
        '% change
        tempText = Mid(tempText, startPos + 3)
        startPos = InStr(tempText, "%")
        If startPos = Len(tempText) Then
            startPos = InStr(tempText, "-")
        End If
        'Debug.Print "Start Pos is: " & startPos
        'Debug.Print "StringLen is: " & Len(tempText)
        'Debug.Print tempText
        'Debug.Print startPos & " This is the start pos"
        Worksheets(1).Cells(k, 13 + j).value = Mid(tempText, 1, startPos)
        'volume
        tempText = Mid(tempText, startPos + 1)
        'startPos = InStr(tempText, "%")
        Worksheets(1).Cells(k, 14 + j).value = "Dunno how to get yet"
        'Open Interest
        Worksheets(1).Cells(k, 15 + j).value = "Dunno how to get yet"
        'Implied Volatility
        Worksheets(1).Cells(k, 16 + j).value = "Dunno how to get yet"
        
        k = k + 1
    End If
    
Next fVal

End Sub


'subroutine to get the basic data surrounding the stock. Not options pricing
Sub getBasicData(IEController As cIE_Controller, tckr As String)
Dim webText As String
Dim tempString As String
Dim findVals(16) As String
Dim theVals() As String
Dim fVal As Variant

tempString = "https://finance.yahoo.com/quote/" & tckr & "?p=" & tckr
'Debug.Print tempString
'Move to the web page we want
IEController.NavigateTo (tempString)
Dim i As Integer, j As Integer, k As Integer, startPos As Integer
Dim tempText As String
'i = 1

'this is the body that contains the needed text values
webText = IEController.html.all(73).innerText
Worksheets(1).Cells(i + 1, 1).value = webText
Debug.Print webText
'set the values in the array
setArray findVals


'Find the current price
'Find where the info starts
startPos = InStr(webText, "NasdaqGS - NasdaqGS Real Time Price. Currency in USD")
If startPos = 0 Then
    startPos = InStr(webText, "NYSE - NYSE Delayed Price")
End If
'cut out most of the junk before it
tempText = Mid(webText, startPos, 200)
'split the values we want by the new line charachter
theVals = Split(tempText, vbCrLf, 15)
'set value in worksheet
Worksheets(1).Cells(14, 3).value = Mid(theVals(8), 1, 6)
Worksheets(1).Cells(14, 2).value = "Current Price"


'Find where the remaining info starts
startPos = InStr(webText, findVals(0))
'cut out most of the junk before it
tempText = Mid(webText, startPos, 500)
'split the values we want by the new line charachter
theVals = Split(tempText, vbCrLf)

'remove some white spaces in the array
For k = 8 To 15
    theVals(k) = theVals(k + 2)
Next k

For k = 0 To 15
    Worksheets(1).Cells(k + 15, 2).value = findVals(k)
    Worksheets(1).Cells(k + 15, 3).value = Replace(theVals(k), findVals(k), "")
Next k

'Worksheets(1).Cells(1, 1).value = webText

End Sub




'vba is dumb. Can't set all values at once because Array(values) returns type variant
Function setArray(ByRef myArray() As String)
    myArray(0) = "Previous Close"
    myArray(1) = "Open"
    myArray(2) = "Bid"
    myArray(3) = "Ask"
    myArray(4) = "Day's Range"
    myArray(5) = "52 Week Range"
    myArray(6) = "Volume"
    myArray(7) = "Avg. Volume"
    myArray(8) = "Market Cap"
    myArray(9) = "Beta (3Y Monthly)"
    myArray(10) = "PE Ratio (TTM)"
    myArray(11) = "EPS (TTM)"
    myArray(12) = "Earnings Date"
    myArray(13) = "Forward Dividend & Yield"
    myArray(14) = "Ex-Dividend Date"
    myArray(15) = "1y Target Est"
End Function

Function setOptionsArray(ByRef myArray() As String)
    myArray(0) = "Contract Name"
    myArray(1) = "Last Trade Date"
    myArray(2) = "Strike"
    myArray(3) = "Last Price"
    myArray(4) = "Bid"
    myArray(5) = "Ask"
    myArray(6) = "Change"
    myArray(7) = "% Change"
    myArray(8) = "Volume"
    myArray(9) = "Open Interest"
    myArray(10) = "Implied Volatility"
End Function
